diff --git a/boost/archive/impl/basic_xml_grammar.hpp b/boost/archive/impl/basic_xml_grammar.hpp
index 768009c..3c1e25a 100644
--- a/boost/archive/impl/basic_xml_grammar.hpp
+++ b/boost/archive/impl/basic_xml_grammar.hpp
@@ -56,7 +56,7 @@
 #endif
 
 //#define BOOST_SPIRIT_DEBUG
-#include <boost/spirit/core/non_terminal/rule.hpp>
+#include <boost/spirit/include/classic_rule.hpp>
 
 // the following hack is to evade a bogus error generated by using the
 // word "arg" when bind.hpp has been included
@@ -97,12 +97,12 @@ public:
 private:
     typedef BOOST_DEDUCED_TYPENAME std::basic_istream<CharType> IStream;
     typedef BOOST_DEDUCED_TYPENAME std::basic_string<CharType> StringType;
-    typedef BOOST_DEDUCED_TYPENAME boost::spirit::chset<CharType> chset_t;
-    typedef BOOST_DEDUCED_TYPENAME boost::spirit::chlit<CharType> chlit_t;
-    typedef BOOST_DEDUCED_TYPENAME boost::spirit::scanner<
+    typedef BOOST_DEDUCED_TYPENAME boost::spirit::classic::chset<CharType> chset_t;
+    typedef BOOST_DEDUCED_TYPENAME boost::spirit::classic::chlit<CharType> chlit_t;
+    typedef BOOST_DEDUCED_TYPENAME boost::spirit::classic::scanner<
         BOOST_DEDUCED_TYPENAME  std::basic_string<CharType>::iterator
     > scanner_t;
-    typedef BOOST_DEDUCED_TYPENAME boost::spirit::rule<scanner_t> rule_t;
+    typedef BOOST_DEDUCED_TYPENAME boost::spirit::classic::rule<scanner_t> rule_t;
     // Start grammar definition
     rule_t    
         Reference,
diff --git a/libs/serialization/src/basic_xml_grammar.ipp b/libs/serialization/src/basic_xml_grammar.ipp
index 07dc9a5..2006392 100644
--- a/libs/serialization/src/basic_xml_grammar.ipp
+++ b/libs/serialization/src/basic_xml_grammar.ipp
@@ -17,9 +17,9 @@
 #include <boost/config.hpp> // BOOST_DEDUCED_TYPENAME
 
 // spirit stuff
-#include <boost/spirit/core/composite/operators.hpp>
-#include <boost/spirit/core/composite/actions.hpp>
-#include <boost/spirit/core/primitives/numerics.hpp>
+#include <boost/spirit/include/classic_operators.hpp>
+#include <boost/spirit/include/classic_actions.hpp>
+#include <boost/spirit/include/classic_numerics.hpp>
 
 // for head_iterator test
 //#include <boost/bind.hpp> 
@@ -33,7 +33,7 @@
 #include <boost/archive/basic_xml_archive.hpp>
 #include <boost/archive/iterators/xml_unescape.hpp>
 
-using namespace boost::spirit;
+using namespace boost::spirit::classic;
 
 namespace boost {
 namespace archive {
@@ -184,7 +184,7 @@ bool basic_xml_grammar<CharType>::my_parse(
     // and transaction data logging in the standard way.
     
     parse_info<BOOST_DEDUCED_TYPENAME std::basic_string<CharType>::iterator> 
-        result = boost::spirit::parse(arg.begin(), arg.end(), rule_);
+        result = boost::spirit::classic::parse(arg.begin(), arg.end(), rule_);
     return result.hit;
 }
 
diff --git a/libs/serialization/src/xml_grammar.cpp b/libs/serialization/src/xml_grammar.cpp
index 4f2c37c..05904f4 100644
--- a/libs/serialization/src/xml_grammar.cpp
+++ b/libs/serialization/src/xml_grammar.cpp
@@ -15,7 +15,7 @@
 #define BOOST_ARCHIVE_SOURCE
 #include <boost/archive/impl/basic_xml_grammar.hpp>
 
-using namespace boost::spirit;
+using namespace boost::spirit::classic;
 
 #include <boost/config.hpp>
 
